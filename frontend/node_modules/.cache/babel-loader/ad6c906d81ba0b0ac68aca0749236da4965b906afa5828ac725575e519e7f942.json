{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Documents\\\\SPL2\\\\Structure\\\\frontend\\\\src\\\\component\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  // State to store the input value\n  const [inputValue, setInputValue] = useState('');\n\n  // Event handler to update input value\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Function to send URL data to the backend\n  const sendDataToBackend = async () => {\n    try {\n      // Send a POST request to the backend with the URL data\n      const response = await fetch('/url', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url: inputValue\n        })\n      });\n\n      // Check if the request was successful\n      if (response.ok) {\n        console.log('URL sent to the backend successfully');\n        // Optionally, you can clear the input field after sending the data\n        setInputValue('');\n      } else {\n        console.error('Failed to send URL to the backend');\n      }\n    } catch (error) {\n      console.error('Error sending data to the backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Type a URL...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendDataToBackend,\n      children: \"Send URL to Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You typed: \", inputValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Input","_s","inputValue","setInputValue","handleInputChange","event","target","value","sendDataToBackend","response","fetch","method","headers","body","JSON","stringify","url","ok","console","log","error","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Documents/SPL2/Structure/frontend/src/component/Input.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Input() {\r\n  // State to store the input value\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  // Event handler to update input value\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  // Function to send URL data to the backend\r\n  const sendDataToBackend = async () => {\r\n    try {\r\n      // Send a POST request to the backend with the URL data\r\n      const response = await fetch('/url', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ url: inputValue }),\r\n      });\r\n\r\n      // Check if the request was successful\r\n      if (response.ok) {\r\n        console.log('URL sent to the backend successfully');\r\n        // Optionally, you can clear the input field after sending the data\r\n        setInputValue('');\r\n      } else {\r\n        console.error('Failed to send URL to the backend');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending data to the backend:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Input field */}\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Type a URL...\"\r\n      />\r\n\r\n      {/* Button to send the URL data to the backend */}\r\n      <button onClick={sendDataToBackend}>Send URL to Backend</button>\r\n\r\n      {/* Displaying the input value */}\r\n      <p>You typed: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAM,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,GAAG,EAAEd;QAAW,CAAC;MAC1C,CAAC,CAAC;;MAEF;MACA,IAAIO,QAAQ,CAACQ,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACnD;QACAhB,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,MAAM;QACLe,OAAO,CAACE,KAAK,CAAC,mCAAmC,CAAC;MACpD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBAEEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXf,KAAK,EAAEL,UAAW;MAClBqB,QAAQ,EAAEnB,iBAAkB;MAC5BoB,WAAW,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAGF7B,OAAA;MAAQ8B,OAAO,EAAErB,iBAAkB;MAAAa,QAAA,EAAC;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGhE7B,OAAA;MAAAsB,QAAA,GAAG,aAAW,EAACnB,UAAU;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAAC3B,EAAA,CAnDQD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAqDd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}