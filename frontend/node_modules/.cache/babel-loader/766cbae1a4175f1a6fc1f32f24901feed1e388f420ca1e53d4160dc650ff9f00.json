{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive\\\\Documents\\\\SPL2\\\\Structure\\\\frontend\\\\src\\\\component\\\\output.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Output() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/output');\n        console.log('Received Logs from backend:', response.data);\n        setLogs(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching logs:', error);\n        setLoading(false);\n      }\n    };\n    if (logs.length === 0) {\n      fetchData();\n    }\n  }, [logs]); // Run the effect only when logs are empty\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n  if (logs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No logs found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: logs.map((logGroup, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Log Group \", groupIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: logGroup.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Src: \", log.src]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Line Number: \", log.lineNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, groupIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Output, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Output","_s","logs","setLogs","loading","setLoading","fetchData","response","get","console","log","data","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","logGroup","groupIndex","index","src","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive/Documents/SPL2/Structure/frontend/src/component/output.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Output() {\r\n    const [logs, setLogs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('/output');\r\n                console.log('Received Logs from backend:', response.data);\r\n                setLogs(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching logs:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (logs.length === 0) {\r\n            fetchData();\r\n        }\r\n    }, [logs]); // Run the effect only when logs are empty\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (logs.length === 0) {\r\n        return <div>No logs found</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {logs.map((logGroup, groupIndex) => (\r\n                <div key={groupIndex}>\r\n                    <p>Log Group {groupIndex + 1}</p>\r\n                    <ul>\r\n                        {logGroup.map((log, index) => (\r\n                            <li key={index}>\r\n                                <p>Src: {log.src}</p>\r\n                                <p>Line Number: {log.lineNumber}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Output;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,SAAS,CAAC;QAC3CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,QAAQ,CAACI,IAAI,CAAC;QACzDR,OAAO,CAACI,QAAQ,CAACI,IAAI,CAAC;QACtBN,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CP,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED,IAAIH,IAAI,CAACW,MAAM,KAAK,CAAC,EAAE;MACnBP,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,IAAIE,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIhB,IAAI,CAACW,MAAM,KAAK,CAAC,EAAE;IACnB,oBAAOd,OAAA;MAAAe,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACInB,OAAA;IAAAe,QAAA,EACKZ,IAAI,CAACiB,GAAG,CAAC,CAACC,QAAQ,EAAEC,UAAU,kBAC3BtB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,GAAG,YAAU,EAACO,UAAU,GAAG,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCnB,OAAA;QAAAe,QAAA,EACKM,QAAQ,CAACD,GAAG,CAAC,CAACT,GAAG,EAAEY,KAAK,kBACrBvB,OAAA;UAAAe,QAAA,gBACIf,OAAA;YAAAe,QAAA,GAAG,OAAK,EAACJ,GAAG,CAACa,GAAG;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBnB,OAAA;YAAAe,QAAA,GAAG,eAAa,EAACJ,GAAG,CAACO,UAAU;UAAA;YAAAF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAF/BI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GATCG,UAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUf,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjB,EAAA,CA/CQD,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}